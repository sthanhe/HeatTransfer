function [fitresult, gof] = createFits(halpha, Talpha, hbeta, Tbeta)
%CREATEFITS(HALPHA,TALPHA,HBETA,TBETA)
%  Create fits.
%
%  Data for 'alpha' fit:
%      X Input : halpha
%      Y Output: Talpha
%  Data for 'beta' fit:
%      X Input : hbeta
%      Y Output: Tbeta
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 14-Apr-2021 12:52:46

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'alpha'.
[xData, yData] = prepareCurveData( halpha, Talpha );

% Set up fittype and options.
ft = fittype( 'poly4' );

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, 'Normalize', 'on' );

% Plot fit with data.
figure( 'Name', 'alpha' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'Talpha vs. halpha', 'alpha', 'Location', 'NorthEast' );
% Label axes
xlabel halpha
ylabel Talpha
grid on

%% Fit: 'beta'.
[xData, yData] = prepareCurveData( hbeta, Tbeta );

% Set up fittype and options.
ft = fittype( 'poly4' );

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, 'Normalize', 'on' );

% Plot fit with data.
figure( 'Name', 'beta' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'Tbeta vs. hbeta', 'beta', 'Location', 'NorthEast' );
% Label axes
xlabel hbeta
ylabel Tbeta
grid on


